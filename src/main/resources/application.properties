spring.application.name=Connect
spring.data.mongodb.uri=${MONGO_URI}

spring.mail.host=smtp.gmail.com
spring.mail.port=465
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.protocol=smtps
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

# Secret key for JWT Token.
jwt.secret.key=${JWT_SECRET}

# logging for cors issues and spring security
logging.level.org.springframework.security=DEBUG

# Frontend origin
frontend.origin = ${FRONTEND_ORIGIN}

# Redis Configuration
spring.data.redis.host = ${REDIS_HOST}
spring.data.redis.port = ${REDIS_PORT}
spring.data.redis.password = ${REDIS_PASSWORD}
spring.data.redis.ssl.enabled = false

# Kafka Producer configuration
spring.kafka.producer.bootstrap-servers = ${KAFKA_SERVER}
spring.kafka.producer.keySerializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.valueSerializer = org.springframework.kafka.support.serializer.JsonSerializer

# Kafka Consumer configuration
spring.kafka.consumer.bootstrap-servers = ${KAFKA_SERVER}
spring.kafka.consumer.keyDeserializer = org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.valueDeserializer = org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages = com.connect.model