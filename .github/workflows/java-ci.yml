name: Java CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:

      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      zookeeper:
        image: wurstmeister/zookeeper
        ports:
          - 2181:2181

      kafka:
        image: wurstmeister/kafka
        ports:
          - 9092:9092
        env:
          KAFKA_ADVERTISED_HOST_NAME: localhost
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_LISTENERS: PLAINTEXT://:9092
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
        options: >-
          --health-cmd "echo 'hello'" --health-interval 10s --health-timeout 5s --health-retries 3

    env:
      MONGO_URI: ${{ secrets.MONGO_URI }}
      MAIL_USERNAME: ${{ secrets.USERNAME }}
      MAIL_PASSWORD: ${{ secrets.PASSWORD }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      FRONTEND_ORIGIN: ${{ secrets.FRONTEND_ORIGIN }}
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
      KAFKA_SERVER: ${{ secrets.KAFKA_SERVER }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Run Tests
        run: mvn test
